apiVersion: v1
kind: Template
metadata:
  name: pipeline
objects:   
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: pipeline
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: pipeline
  spec:
    triggers:
      - type: ConfigChange
    runPolicy: Serial
    source:
      type: Git
      git:
        uri: 'https://github.com/ananthfrancis/nodejs_pipeline.git'
        ref: master
    strategy:
      type: Docker
      dockerStrategy: {}
    output:
      to:
        kind: ImageStreamTag
        name: 'pipeline:latest'
    resources: {}
    postCommit: {}
    nodeSelector: null
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: pipeline
    labels:
      app: pipeline
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
    triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - pipeline
          from:
            kind: ImageStreamTag
            name: 'pipeline:latest'
      - type: ConfigChange
    replicas: 2
    test: false
    selector:
      deploymentconfig: pipeline
    template:
      metadata:
        labels:
          app: pipeline
          deploymentconfig: pipeline
      spec:
        containers:
          - name: pipeline
            ports:
              - containerPort: 5000
                protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}

- apiVersion: v1
  kind: Service
  metadata:
    name: pipeline 
    labels:
      app: pipeline
  spec:
    ports:
      - name: 8080-tcp
        protocol: TCP
        port: 8080
        targetPort: 5000
    selector:
      deploymentconfig: pipeline
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    name: pipeline
    labels:
      router: 
  spec:
    host: 
    to:
      kind: Service
      name: pipeline
      weight: 100
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
    wildcardPolicy: None
  
labels:      
  app: pipeline